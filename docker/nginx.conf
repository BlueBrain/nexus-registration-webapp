
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/tmp/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$http_x_forwarded_host" "$http_x_forwarded_proto" "$http_forwarded" "$http_via" "$http_https"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;  # no cache
        #text/css                  max;
        #application/javascript    max;
        #~image/                   max;
    }

    server {
        listen       8000 default_server;
        server_name  localhost;

        set    $site_root /usr/share/nginx/html;
        root   $site_root;
        index  index.html;

        # Applies cache control
        expires $expires;

        location ${BASE_PATH}/ {
            alias     $site_root/;
            try_files $uri $uri/;
        }

        location ~* ^(${BASE_PATH})?/edit/ {
            alias     $site_root/;
            try_files $uri $uri/ /edit.html;
        }

        # Normalizes valid paths without a trailing slash
        # to always have a trailing slash.
        # Examples:
        # "${BASE_PATH}"" => "${BASE_PATH}/""
        # "/edit" => "/edit/"
        # "${BASE_PATH}/edit" => "${BASE_PATH}/edit/"
        location ~* ^(${BASE_PATH})?(/edit)?(?!/)$ {
            # In Openshift we may not get the right $host anywhere in HTTP headers,
            # so we can't use `try_files` and we have to add a space before
            # the path below, otherwise nginx will auto-prefix it with
            # $scheme://$host that may both be wrong.
            # Downside: some browsers may not handle the leading space nicely.
            return 302 " $uri/";
        }
        
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   $site_root;
        }
    }
}
